
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp9(

	//////////// CLOCK //////////
	//input 		          		CLOCK2_50,
	//input 		          		CLOCK3_50,
	//input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [0:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		    reg [6:0]		HEX0,
	output		    reg [6:0]		HEX1,
	output		    reg [6:0]		HEX2,
	output		    reg [6:0]		HEX3,
	output		    reg [6:0]		HEX4,
	output		    reg [6:0]		HEX5,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	//inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT
	//inout 		          		PS2_DAT2
);
	
	wire [9:0] h_addr, v_addr;
	wire [11:0] vga_data;
	wire [7:0] ascii_data;
	assign VGA_SYNC_N = 0;
	assign VGA_R[3:0] = 4'b0;
	assign VGA_G[3:0] = 4'b0;
	assign VGA_B[3:0] = 4'b0;
//	assign LEDR[9:1]=9'b0;
	
	wire no_input_status;
	wire [2:0] command;
	
	assign LEDR[9]=no_input_status;
	
	clkgen #(25000000) vgaclk(CLOCK_50,~KEY[0],1'b1,VGA_CLK);
	vga_ctrl vgactrl(VGA_CLK,~KEY[0],vga_data,h_addr,v_addr,VGA_HS,VGA_VS,VGA_BLANK_N,VGA_R[7:4],VGA_G[7:4],VGA_B[7:4]);
	mykey key(CLOCK_50,~KEY[0],PS2_CLK,PS2_DAT,HEX5,HEX4,hex3,hex2,hex1,hex0,LEDR[0],dis_data,ascii_data,no_input_status,command);
	char_display i1(CLOCK_50,~KEY[0],no_input_status,command,ascii_data,h_addr,v_addr,vga_data);
	
	//开发板数码管部分,可有可无
	//hex3,hex2输出ASCII码
	wire [7:0] dis_data;
	wire [6:0] hex3,hex2,hex1,hex0;
	always@(*)
	begin
		if(dis_data==8'b0)
		begin
			HEX0 =7'b1111111;
			HEX1 =7'b1111111;
			HEX2 =7'b1111111;
			HEX3 =7'b1111111;
		end
		else
		begin
			HEX0=hex0;
			HEX1=hex1;
			HEX2=hex2;
			HEX3=hex3;
		end
	end
	//////
	
endmodule
