
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module mySystem(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS,


	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_DAT
);


	wire [31:0] imemaddr;
	wire [31:0] imemdataout;
	wire imemclk;
	wire [31:0] dmemaddr;
	wire [31:0] ddataout;
	wire [31:0] dmemdataout;
	wire [31:0] dmemdatain;
	wire dmemrdclk;
	wire dmemwrclk;
	wire [2:0] dmemop;
	wire dmemwe;
	wire awe;
	wire [31:0] dbgdata;
	wire [9:0] h_addr;
	wire [9:0] v_addr;
	wire [23:0] vgadata;
	wire [5:0] hour,min,sec;
	wire [7:0] keyascii;
	wire [7:0] ascii;
	wire keyread;
	wire noinput;
	wire [2:0] command;
	wire [7:0]hex5;
	wire [7:0]hex0;
	wire [7:0]hex1;

	assign ddataout = (dmemaddr[31:20] == 12'h001)? dmemdataout :
	((dmemaddr[31:20]==12'h003)? keyascii : (dmemaddr[31:20]==12'h004)? {10'b0,hour,2'b0,min,2'b0,sec} :32'b0);
	assign VGA_SYNC_N = 0;
	
	timer mytime(CLOCK_50,hour,min,sec);
	rv32is cpu(CPU_CLK,~KEY[0],imemaddr,imemdataout,imemclk,dmemaddr,ddataout,
	dmemdatain,dmemrdclk,dmemwrclk,dmemop,dmemwe,awe,keyread,dbgdata);

	imem im(imemaddr[17:2],imemclk,0,0,imemdataout);
	mydmem dm(dmemaddr,dmemdataout,dmemdatain,dmemrdclk,dmemwrclk,dmemop,dmemwe);
	
	char_display disch(CLOCK_50,~KEY[0],noinput,command,ascii,dmemrdclk,dmemaddr[3:0],
	keyread,keyascii,hex5,hex0,hex1);
	mykey key(CLOCK_50,~KEY[0],PS2_CLK,PS2_DAT,LEDR[9],ascii,noinput,command);
	
	assign LEDR[0]=dmemwe;
	assign LEDR[1]=awe;
	assign LEDR[2]=keyread;
	
	bcd7seg out5(hex5[3:0],HEX0);
	bcd7seg out6(hex5[7:4],HEX1);
	bcd7seg test0(hex0[3:0],HEX2);
	bcd7seg test1(hex0[7:4],HEX3);
	bcd7seg out3(hex1[3:0],HEX4);
	bcd7seg out4(hex1[7:4],HEX5);

	
	clkgen #(25000000) my_vgaclk(CLOCK_50,~KEY[0],1'b1,VGA_CLK);
	clkgen #(12500000) my_cpuclk(CLOCK_50,~KEY[0],1'b1,CPU_CLK);
	
	vga myvga(CLOCK_50,h_addr,v_addr,vgadata,dmemdatain,dmemaddr,dmemwrclk,awe);
	vga_ctrl vgactrl(VGA_CLK, ~KEY[0], vgadata, h_addr, v_addr, VGA_HS, VGA_VS, VGA_BLANK_N, VGA_R, VGA_G, VGA_B);

endmodule