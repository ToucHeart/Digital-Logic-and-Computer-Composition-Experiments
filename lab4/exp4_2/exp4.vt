// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/06/2021 13:01:30"
                                                                                
// Verilog Test Bench template for design : exp4
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module exp4_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg CLOCK_50;
reg [3:0] KEY;
reg [4:0] SW;
// wires                                               
wire [6:0]  HEX0;
wire [6:0]  HEX1;
wire [6:0]  HEX2;
wire [6:0]  HEX3;
wire [6:0]  HEX4;
wire [6:0]  HEX5;
wire [9:0]  LEDR;

// assign statements (if any)                          
exp4 i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK_50(CLOCK_50),
	.HEX0(HEX0),
	.HEX1(HEX1),
	.HEX2(HEX2),
	.HEX3(HEX3),
	.HEX4(HEX4),
	.HEX5(HEX5),
	.KEY(KEY),
	.LEDR(LEDR),
	.SW(SW)
);
initial                                                
begin    
                                              
	  CLOCK_50 = 0;
	  SW[4:0]=5'b00000;
	  KEY[3:0]=4'b1111;
	  #10;
	  SW[1:0]=2'b01;//秒表模式
     #200;
     SW[2]=1;//秒表暂停
     #50;
     SW[3]=1;//秒表重启
	  #50;
     SW[3]=0;//秒表重启关闭
     #30;
	  SW[3]=1;//秒表重启
	  SW[1:0]=2'b10;//显示闹钟
	  KEY[0]=0;//调整闹钟时间
	  #100;
	  KEY[0]=1;//关闭调整闹钟时间
     SW[1:0]=2'b00;//显示时间
     #2000;
	  KEY[3]=0;
	  KEY[0]=0;//调整时间
	  #2000;
	  KEY[0]=1;
	  $stop;                           
end 
               
always
begin
    #0.5 CLOCK_50 = ~CLOCK_50; 
end                                                    
endmodule

